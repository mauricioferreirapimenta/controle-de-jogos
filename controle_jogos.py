
import streamlit as st
import pandas as pd
import os
from datetime import date
from io import BytesIO

st.set_page_config(page_title="üéÆ Controle de Jogos", layout="centered")
st.title("üéÆ Controle de Cole√ß√£o e Progresso de Jogos")
st.markdown("---")

# -------------------------------
# Inicializa√ß√£o
# -------------------------------
ARQUIVO = "Lista de Jogos_ver1.xlsx"
colunas = [
    "Plataforma", "Console", "G√™nero", "Jogo", "M√≠dia", "Edi√ß√£o",
    "Condi√ß√£o", "Status", "Nota", "Tempo (h)", "In√≠cio", "Fim",
    "Observa√ß√µes cole√ß√£o", "Coment√°rios pessoais"
]

if os.path.exists(ARQUIVO):
    df = pd.read_excel(ARQUIVO)
else:
    df = pd.DataFrame(columns=colunas)

consoles_por_plataforma = {
    "Playstation": ["PS1", "PS2", "PS3", "PS4", "PS5", "PSP", "PS Vita"],
    "Xbox": ["Xbox", "Xbox 360", "Xbox One", "Xbox Series S", "Xbox Series X"],
    "Nintendo": ["NES", "SNES", "Nintendo 64", "GameCube", "Wii", "Wii U", "Switch", "3DS", "DS"],
    "Sega": ["Master System", "Mega Drive", "Saturn", "Dreamcast"],
    "Outra": []
}

# -------------------------------
# üìÇ Navega√ß√£o lateral
# -------------------------------
paginas = [
    "‚ûï Adicionar Jogo",
    "‚úèÔ∏è Editar Jogo",
    "üóëÔ∏è Excluir Jogo",
    "üìÅ Navegar por Plataforma",
    "üìã Lista Completa",
    "üìÅ Backup e Importa√ß√£o"
]
pagina = st.sidebar.radio("Ir para", paginas)
st.sidebar.markdown("---")

# -------------------------------
# P√°gina: Adicionar Jogo
# -------------------------------
if pagina == "‚ûï Adicionar Jogo":
    st.subheader("‚ûï Adicionar novo jogo √† cole√ß√£o")
    with st.form("form_adicionar"):
        plataforma = st.selectbox("Plataforma", list(consoles_por_plataforma.keys()))
        console = st.selectbox("Console", consoles_por_plataforma.get(plataforma, []))
        genero = st.text_input("G√™nero")
        jogo = st.text_input("Nome do Jogo")
        midia = st.selectbox("M√≠dia", ["F√≠sico", "Digital", "Outro"])
        edicao = st.text_input("Edi√ß√£o")
        condicao = st.text_area("Condi√ß√£o / Observa√ß√µes de cole√ß√£o")
        enviar = st.form_submit_button("Adicionar √† cole√ß√£o")

    if enviar:
        novo = {
            "Plataforma": plataforma, "Console": console, "G√™nero": genero, "Jogo": jogo,
            "M√≠dia": midia, "Edi√ß√£o": edicao, "Condi√ß√£o": condicao,
            "Status": "", "Nota": "", "Tempo (h)": "", "In√≠cio": "", "Fim": "",
            "Observa√ß√µes cole√ß√£o": "", "Coment√°rios pessoais": ""
        }
        df = pd.concat([df, pd.DataFrame([novo])], ignore_index=True)
        df.to_excel(ARQUIVO, index=False)
        st.success(f"Jogo '{jogo}' adicionado com sucesso!")

# -------------------------------
# P√°gina: Editar Jogo
# -------------------------------
elif pagina == "‚úèÔ∏è Editar Jogo":
    st.subheader("‚úèÔ∏è Editar jogo")
    plataforma = st.selectbox("Plataforma", df["Plataforma"].unique())
    consoles = df[df["Plataforma"] == plataforma]["Console"].unique()
    console = st.selectbox("Console", consoles)
    jogos = df[(df["Plataforma"] == plataforma) & (df["Console"] == console)]["Jogo"].unique()
    jogo = st.selectbox("Jogo", jogos)

    idx = df[(df["Plataforma"] == plataforma) & (df["Console"] == console) & (df["Jogo"] == jogo)].index[0]

    with st.form("form_edicao"):
        status = st.selectbox("Status", ["", "Jogando", "Zerado", "Parado", "Nunca Joguei"], index=0)
        nota = st.slider("Nota pessoal", 0, 10, int(df.at[idx, "Nota"] or 0))
        tempo = st.number_input("Tempo jogado (h)", min_value=0, value=int(df.at[idx, "Tempo (h)"] or 0))
        inicio = st.date_input("Data de in√≠cio", value=date.today())
        fim = st.date_input("Data de fim", value=date.today())
        comentarios = st.text_area("Coment√°rios pessoais")
        editar = st.form_submit_button("Salvar altera√ß√µes")

    if editar:
        df.at[idx, "Status"] = status
        df.at[idx, "Nota"] = nota
        df.at[idx, "Tempo (h)"] = tempo
        df.at[idx, "In√≠cio"] = inicio
        df.at[idx, "Fim"] = fim
        df.at[idx, "Coment√°rios pessoais"] = comentarios
        df.to_excel(ARQUIVO, index=False)
        st.success("Informa√ß√µes atualizadas com sucesso!")

# -------------------------------
# P√°gina: Excluir Jogo
# -------------------------------
elif pagina == "üóëÔ∏è Excluir Jogo":
    st.subheader("üóëÔ∏è Excluir jogo")
    plataforma = st.selectbox("Plataforma", df["Plataforma"].unique())
    consoles = df[df["Plataforma"] == plataforma]["Console"].unique()
    console = st.selectbox("Console", consoles)
    jogos = df[(df["Plataforma"] == plataforma) & (df["Console"] == console)]["Jogo"].unique()
    jogo = st.selectbox("Jogo", jogos)

    if st.button("Excluir jogo selecionado"):
        df = df[~((df["Plataforma"] == plataforma) & (df["Console"] == console) & (df["Jogo"] == jogo))]
        df.to_excel(ARQUIVO, index=False)
        st.success(f"Jogo '{jogo}' exclu√≠do com sucesso!")

# -------------------------------
# P√°gina: Navegar por Plataforma
# -------------------------------
elif pagina == "üìÅ Navegar por Plataforma":
    st.subheader("üìÅ Minha Cole√ß√£o por Plataforma e Console")
    plataformas = df["Plataforma"].value_counts()
    for plat in plataformas.index:
        with st.expander(f"{plat} ({plataformas[plat]})"):
            subset = df[df["Plataforma"] == plat]
            consoles = subset["Console"].value_counts()
            for con in consoles.index:
                st.markdown(f"**üéÆ {con}** ({consoles[con]})")
                st.dataframe(subset[subset["Console"] == con][["Jogo", "G√™nero", "Status", "Nota"]])

# -------------------------------
# P√°gina: Lista Completa
# -------------------------------
elif pagina == "üìã Lista Completa":
    st.subheader("üìã Lista completa de jogos")
    df_ordenado = df.sort_values(by=["Plataforma", "Console", "Jogo"])
    st.dataframe(df_ordenado)

# -------------------------------
# P√°gina: Backup e Importa√ß√£o
# -------------------------------
elif pagina == "üìÅ Backup e Importa√ß√£o":
    st.subheader("üìÅ Backup e Importa√ß√£o")
    buffer = BytesIO()
    df.to_excel(buffer, index=False)
    st.download_button("üì• Exportar para Excel", buffer.getvalue(), "jogos_backup.xlsx", mime="application/vnd.ms-excel")

    arquivo = st.file_uploader("üì§ Importar nova planilha", type=["xlsx"])
    if arquivo:
        df = pd.read_excel(arquivo)
        df.to_excel(ARQUIVO, index=False)
        st.success("Planilha importada com sucesso!")
